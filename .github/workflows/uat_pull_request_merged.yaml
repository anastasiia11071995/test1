name: Deploy to UAT
on:
  workflow_dispatch:
  push:
    branches:
      - uat
  pull_request:
    types: [closed]    
jobs:

  check_merge:
    runs-on: ubuntu-latest
    outputs:
      merged: ${{ steps.merged-from-dev.outputs.is_merged }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine if merged from dev
        id: merged-from-dev
        if: ${{ github.event_name == 'pull_request' && 
         github.event.action == 'closed' && 
         github.event.pull_request.base.ref == 'uat' && 
         github.event.pull_request.merged == true &&
         github.event.pull_request.head.ref == 'dev'}}
        run: |
          echo "true" >> $GITHUB_OUTPUT

      - name: Debug Event Data
        run: |
            echo "Event name: ${{ github.event_name }}"
            echo "Event action: ${{ github.event.action }}"
            echo "Base ref: ${{ github.event.pull_request.base.ref }}"
            echo "Merged: ${{ github.event.pull_request.merged }}"
            echo "Condition evaluated to true. Writing 'true' to output."
            echo "need dev: ${{ github.event.pull_request.head.ref}}"
            echo "true" >> $GITHUB_OUTPUT


             
  build-deploy-and-update:
    needs: check_merge
    if: needs.check_merge.outputs.merged == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Determine and set Docker Tag
        id: set-tag
        run: |
          if [[ "${{ github.head_ref }}" =~ ^release/ ]]; then
             echo "release-tag=$(echo "$(echo ${{ github.head_ref }} | sed 's/^release\///')")" >> $GITHUB_OUTPUT      
          else
            echo "release-tag=v_${{ github.run_id }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env: 
          release-tag: ${{ steps.set-tag.outputs.release-tag }}
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/test1:${{ steps.set-tag.outputs.release-tag }},
            ghcr.io/${{ github.repository_owner }}/test1:${{ github.ref_name }}_latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          repository: anastasiia11071995/test_chatrs
          ref: dev
          ssh-key: ${{ secrets.CHATRS_KEY }}      

      - name: Determine and set Docker Tag
        id: set-tag1
        run: |
          if: needs.check_merge.outputs.merged == 'true'; then
            echo "release-tag=v_${{ github.run_id }}" >> $GITHUB_OUTPUT
          else  
            echo "release-tag=$(yq '.image.tag' values.dev.yaml)" >> $GITHUB_OUTPUT  
          fi  
        env: 
          release-tag: ${{ steps.set-tag1.outputs.release-tag }}    
    
    
      - name: Update tag in yaml
        run: | 
          git fetch
          git checkout uat 
          yq -i ".image.tag =\"${{ steps.set-tag1.outputs.release-tag }}\"" values.${{ github.ref_name }}.yaml

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git config --global credential.helper store
    
      - name: Commit and push changes
        run: |
          git add values.${{ github.ref_name }}.yaml
          git commit -m "Update image tag to $TAG in ${{ github.ref_name }}"
          git push origin ${{ github.ref_name }}
